/*
 * ChannelEngine Merchant API
 *
 * ChannelEngine API for merchants
 *
 * The version of the OpenAPI document: 2.9.9
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ChannelEngine.Merchant.ApiClient.Client.OpenAPIDateConverter;

namespace ChannelEngine.Merchant.ApiClient.Model
{
    /// <summary>
    /// MerchantProductWithBuyBoxPrice
    /// </summary>
    [DataContract(Name = "MerchantProductWithBuyBoxPrice")]
    public partial class MerchantProductWithBuyBoxPrice : IEquatable<MerchantProductWithBuyBoxPrice>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MerchantProductWithBuyBoxPrice" /> class.
        /// </summary>
        /// <param name="sku">Product SKU number.</param>
        /// <param name="gtin">Product GTIN.</param>
        /// <param name="buyBoxPrice">Price of Buy box winner (excl. shipping cost)  Note: not all channels have a separate shipping cost field (e.g. bol.com), so can be the same as BuyBoxPriceInclShipping.</param>
        /// <param name="buyBoxPriceInclShipping">Price of Buy box winner (incl. shipping cost).  If null, then there is no data or no Buy box winner.</param>
        /// <param name="isMerchantBuyBoxWinner">Are you the Buy box winner or not?.</param>
        public MerchantProductWithBuyBoxPrice(string sku = default(string), string gtin = default(string), decimal? buyBoxPrice = default(decimal?), decimal? buyBoxPriceInclShipping = default(decimal?), bool isMerchantBuyBoxWinner = default(bool))
        {
            this.Sku = sku;
            this.Gtin = gtin;
            this.BuyBoxPrice = buyBoxPrice;
            this.BuyBoxPriceInclShipping = buyBoxPriceInclShipping;
            this.IsMerchantBuyBoxWinner = isMerchantBuyBoxWinner;
        }

        /// <summary>
        /// Product SKU number
        /// </summary>
        /// <value>Product SKU number</value>
        [DataMember(Name = "Sku", EmitDefaultValue = true)]
        public string Sku { get; set; }

        /// <summary>
        /// Product GTIN
        /// </summary>
        /// <value>Product GTIN</value>
        [DataMember(Name = "Gtin", EmitDefaultValue = true)]
        public string Gtin { get; set; }

        /// <summary>
        /// Price of Buy box winner (excl. shipping cost)  Note: not all channels have a separate shipping cost field (e.g. bol.com), so can be the same as BuyBoxPriceInclShipping
        /// </summary>
        /// <value>Price of Buy box winner (excl. shipping cost)  Note: not all channels have a separate shipping cost field (e.g. bol.com), so can be the same as BuyBoxPriceInclShipping</value>
        [DataMember(Name = "BuyBoxPrice", EmitDefaultValue = true)]
        public decimal? BuyBoxPrice { get; set; }

        /// <summary>
        /// Price of Buy box winner (incl. shipping cost).  If null, then there is no data or no Buy box winner
        /// </summary>
        /// <value>Price of Buy box winner (incl. shipping cost).  If null, then there is no data or no Buy box winner</value>
        [DataMember(Name = "BuyBoxPriceInclShipping", EmitDefaultValue = true)]
        public decimal? BuyBoxPriceInclShipping { get; set; }

        /// <summary>
        /// Are you the Buy box winner or not?
        /// </summary>
        /// <value>Are you the Buy box winner or not?</value>
        [DataMember(Name = "IsMerchantBuyBoxWinner", EmitDefaultValue = true)]
        public bool IsMerchantBuyBoxWinner { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MerchantProductWithBuyBoxPrice {\n");
            sb.Append("  Sku: ").Append(Sku).Append("\n");
            sb.Append("  Gtin: ").Append(Gtin).Append("\n");
            sb.Append("  BuyBoxPrice: ").Append(BuyBoxPrice).Append("\n");
            sb.Append("  BuyBoxPriceInclShipping: ").Append(BuyBoxPriceInclShipping).Append("\n");
            sb.Append("  IsMerchantBuyBoxWinner: ").Append(IsMerchantBuyBoxWinner).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MerchantProductWithBuyBoxPrice);
        }

        /// <summary>
        /// Returns true if MerchantProductWithBuyBoxPrice instances are equal
        /// </summary>
        /// <param name="input">Instance of MerchantProductWithBuyBoxPrice to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MerchantProductWithBuyBoxPrice input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Sku == input.Sku ||
                    (this.Sku != null &&
                    this.Sku.Equals(input.Sku))
                ) && 
                (
                    this.Gtin == input.Gtin ||
                    (this.Gtin != null &&
                    this.Gtin.Equals(input.Gtin))
                ) && 
                (
                    this.BuyBoxPrice == input.BuyBoxPrice ||
                    (this.BuyBoxPrice != null &&
                    this.BuyBoxPrice.Equals(input.BuyBoxPrice))
                ) && 
                (
                    this.BuyBoxPriceInclShipping == input.BuyBoxPriceInclShipping ||
                    (this.BuyBoxPriceInclShipping != null &&
                    this.BuyBoxPriceInclShipping.Equals(input.BuyBoxPriceInclShipping))
                ) && 
                (
                    this.IsMerchantBuyBoxWinner == input.IsMerchantBuyBoxWinner ||
                    this.IsMerchantBuyBoxWinner.Equals(input.IsMerchantBuyBoxWinner)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Sku != null)
                    hashCode = hashCode * 59 + this.Sku.GetHashCode();
                if (this.Gtin != null)
                    hashCode = hashCode * 59 + this.Gtin.GetHashCode();
                if (this.BuyBoxPrice != null)
                    hashCode = hashCode * 59 + this.BuyBoxPrice.GetHashCode();
                if (this.BuyBoxPriceInclShipping != null)
                    hashCode = hashCode * 59 + this.BuyBoxPriceInclShipping.GetHashCode();
                hashCode = hashCode * 59 + this.IsMerchantBuyBoxWinner.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
